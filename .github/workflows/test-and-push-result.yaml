name: Matrix Example

on:
  push:
    branches: main
    paths-ignore:
      - 'README.md' # Autogenerated based on template

jobs:
  initialize_db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Initialize database
        run: |
          cd results-aggregator/
          uv run initialize_database.py

      - name: Upload DuckDB file
        uses: actions/upload-artifact@v4
        with:
          name: snyk-data
          path: results-aggregator/duckdb

  build:
    runs-on: ubuntu-latest
    needs: initialize_db
    strategy:
      max-parallel: 1
      matrix:
        folder: ['python-pip', 'python-poetry']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Build
        run: |
          echo "Building ${{ matrix.folder }}"
          cd ${{ matrix.folder }}
          docker compose up -d
          sleep 2
          cd ../tests
          pip install requests
          python test_api.py
      - name: Snyk test 
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          SNYK_API: https://api.eu.snyk.io
        with:
          image: ${{ matrix.folder }}-api
          command: test
          json: true
      - name: Download all DBs
        uses: actions/download-artifact@v4
        with:
          name: snyk-data
          path: results-aggregator/

      - name: Partial aggregate of results
        run: |
          cd results-aggregator/
          echo "Modifying snyk.json"
          cat ../snyk.json | jq -e '.vulnerabilities' > snyk.json
          echo "Checking docker image"
          docker inspect ${{ matrix.folder }}-api > image.json
          docker history ${{ matrix.folder }}-api --format json > history.json
          echo "Running aggregation"
          ls -al
          uv run main.py

      - name: Upload DuckDB file
        uses: actions/upload-artifact@v4
        with:
          name: snyk-data
          path: results-aggregator/duckdb
          overwrite: true

      - name: Cleanup
        if: always()
        run: |
          cd ${{ matrix.folder }}
          docker compose down

  results:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Download all DBs
        uses: actions/download-artifact@v4
        with:
          name: snyk-data
          path: results-aggregator/
      - name: Print results
        run: |
          cd results-aggregator/
          uv run generate_results.py
      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update README"
      - name: Push changes
        run: |
          git push origin main

